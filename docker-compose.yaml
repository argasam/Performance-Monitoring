version: "3.8"
name: "cinema-plus-be"

networks:
  k6:
  grafana:

services:
  mongo-express:
    image: mongo-express
    restart: always
    env_file: ./.env
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGODB_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGODB_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongodb:27017/$MONGODB_DATABASE?authSource=admin
      ME_CONFIG_MONGODB_SERVER: mongodb
  mongodb:
    container_name: cinema-plus-mongodb
    image: mongo:6.0
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_PORT:$MONGODB_PORT
    volumes:
      - db:/data/db
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
        reservations:
          cpus: "0.5"
          memory: 512m
  app:
    container_name: cinema-plus-api
    depends_on:
      - mongodb
    build: .
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $PORT:$PORT
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_PORT
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
        reservations:
          cpus: "0.5"
          memory: 512M

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - grafana
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.45.1
    container_name: prometheus
    user: root
    ports:
      - 9090:9090
    command: 
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - '--web.enable-remote-write-receiver'
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./data:/prometheus
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.7.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2     
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped

  influxdb:
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  k6:
    image: grafana/k6:latest
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./samples:/scripts

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  db:
